@model CodeFirstEntities.MainApplication

@{
    ViewBag.Title = "EditPartial";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js"></script>
<script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.8/jquery.validate.min.js"></script>

<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.css")" />
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/themes/base/jsDatePick_ltr.min.css")" />
<script type="text/javascript" src="@Url.Content("~/Scripts/jsDatePick.min.1.3.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jsDatePick.jquery.min.1.3.js")"></script>

<link href="~/Content/customAlerts.css" rel="stylesheet" />
<script src="~/Scripts/bootbox.js"></script>

@*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">*@
@*<script src="http://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="http://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@


<script  type="text/javascript">
    $(document).ready(function () {
        var dob = document.getElementById("ClientLeads_ScheduleDate").value;
        var dat = new Date(dob);
        var month = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
        var data = dat.getDate() + "/" + month[dat.getMonth()] + "/" + dat.getFullYear();
        document.getElementById('ClientLeads_ScheduleDate').value = data;
    });
</script>


<script type="text/javascript">
    $(document).ready(function () {
        $("input").not($(":button")).keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("select").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
        $("textarea").keypress(function (evt) {
            if (evt.keyCode == 13) {
                iname = $(this).val();
                if (iname !== 'Submit') {
                    var fields =
$(this).parents('form:eq(0),body').find('button,input,textarea,select');
                    var index = fields.index(this);
                    if (index > -1 && (index + 1) < fields.length) {
                        fields.eq(index + 1).focus();
                    }
                    return false;
                }
            }
        });
    });
</script>

<script type="text/javascript">
    //window.onload = function () {
    //    var cal_start = new JsDatePick({
    //        useMode: 2,
    //        target: "ClientLeads_ScheduleDate",
    //        dateFormat: "%m/%d/%Y"
    //    });
    //    cal_start.addOnSelectedDelegate(function () {
    //        document.getElementById('ClientLeads_ScheduleDate').value = cal_start.getSelectedDayFormatted();
    //        cal_end.showCalendar();
    //    });

    //    //$(function () {
    //    //    $("#date_start").datepicker({
    //    //        onSelect: function (d) {
    //    //        }
    //    //    });

    //    //});

        $(document).ready(function () {
            var data = new JsDatePick({
                useMode: 2,
                target: "ClientLeads_ScheduleDate",
                dateFormat: "%d/%M/%Y"
            });


            data.addOnSelectedDelegate(function () {

                var today = new Date();
                var birth = document.getElementById("ClientLeads_ScheduleDate").value;
                var birthDate = new Date(birth);
                var age = today.getFullYear() - birthDate.getFullYear();
                var m = today.getMonth() - birthDate.getMonth();
                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                    age--;
                }
                //document.getElementById("EmployeeDetails_Age").value = age;
            });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlcountry").change(function () {
            var idmodel = $(this).val()

            $.getJSON("/ClientLead/LoadStateByCountry", { countryname: idmodel },
            function (Data) {
                var select = $("#ddlstate");
                select.empty();
                select.append($('<option/>', {
                    value: "",
                    text: "Select State"
                }));
                $.each(Data, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });
        });

    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlstate").change(function () {
            var idmodel = $(this).val();
            //if (idmodel == "Maharashtra") {
            //    $("#Local").attr('checked', true);
            //    document.getElementById("ClientDetails_checkState").value = "Local";
            //    document.getElementById("YesRadioButton").disabled = true;
            //    document.getElementById("NoRadioButton").disabled = true;
            //    document.getElementById("NoRadioButton").checked = true;
            //    document.getElementById("displayformtype").style.display = "none";
            //}
            //else {
            //    $("#OMS").attr('checked', true);
            //    document.getElementById("ClientDetails_checkState").value = "OMS";
            //}
            $.getJSON("/Client/LoadDistrictByState", { statename: idmodel },
            function (Data) {
                var select = $("#ddldistrict");
                select.empty();
                select.append($('<option/>', {
                    value: "",
                    text: "Select District"
                }));

                $.each(Data, function (index, itemData) {

                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            });
        });
    });
</script>

<div class="col-md-12 col-lg-12">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model => model.ClientLeads.ClientLeadId)
        @Html.HiddenFor(model => model.ClientLeads.ClientLeadCode)

        <div class="row">
            <div class="row">
                <h2>
                    Client Lead Details
                </h2>
           </div>
                <div class="row">
                    <div class="col-md-4 col-lg-4">
                        <label>Client Lead Id</label>
                        @Html.DisplayFor(model => model.ClientLeads.ClientLeadId)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-lg-6">
                        <div class="col-md-12 col-lg-12">
                            <div class="form-group row">
                                <label for="exampleInputname">Client Name<i style= "color: red" ></i></label>
                                @Html.TextBoxFor(model => model.ClientLeads.ClientName, new { @placeholder = "Client Name", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.ClientName, null, new { style = "color:red", @id = "name" })
                                <label id = "errorname" class="error" style="display: none"></label>
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputname">Contac No.1<i style = "color: red" > *</i ></label >
                                @Html.TextBoxFor(model => model.ClientLeads.ContactNo1, new { @placeholder = "Contac No.1", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.ContactNo1, null, new { style = "color:red", @id = "contact1" })
                                <label id = "errorname" class="error" style="display: none"></label>
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputname">Contact No.1<i style = "color: red" > *</i ></label >
                                @Html.TextBoxFor(model => model.ClientLeads.ContactNo2, new { @placeholder = "Contact No.1", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.ContactNo2, null, new { style = "color:red", @id = "contact2" })
                                <label id = "errorname" class="error" style="display: none"></label>
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputname">Address<i style="color: red">*</i></label>
                                @Html.TextAreaFor(model => model.ClientLeads.Address, new { @placeholder = "Address", @class = "form-control", @rows = 1 })
                                @Html.ValidationMessageFor(model => model.ClientLeads.Address, null, new { style = "Address", @id = "address" })
                                <label id = "errorname" class="error" style="display: none"></label>
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputCountry">Country<i style="color: red">*</i></label>
                                @Html.DropDownListFor(model => model.ClientLeads.Country, new SelectList(Model.ClientLeads.CountryList, "countryName", "countryName", Model.ClientLeads.Country), "Select Country", new { id = "ddlcountry", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.Country, null, new { style = "color:red" })
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputState">State<i style="color: red">*</i></label>
                                @Html.DropDownListFor(model => model.ClientLeads.State, new SelectList(Model.ClientLeads.StateList, "StateName", "StateName"), "Select State", new { id = "ddlstate", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.State, null, new { style = "color:red", @id = "state" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <div class="col-md-12 col-lg-12">
                            <div class="form-group row">
                                <label for="exampleInputDistrict">District<i style="color: red">*</i></label>
                                @Html.DropDownListFor(model => model.ClientLeads.District, new SelectList(Model.ClientLeads.DistrictList, "DistrictName", "DistrictName", Model.ClientLeads.District), "Select District", new { id = "ddldistrict", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.District, null, new { style = "color:red" })
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputCity">City<i style="color: red">*</i></label>
                                @Html.TextBoxFor(model => model.ClientLeads.City, new { @placeholder = "City", @class = "form-control", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.City, null, new { style = "color:red", @id = "city" })
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputname">Requriment<i style="color: red">*</i></label>
                                @Html.TextBoxFor(model => model.ClientLeads.Requriment, new { @placeholder = "Requriment", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.Requriment, null, new { style = "color:red", @id = "requriment" })
                                <label id = "errorname" class="error" style="display: none"></label>
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputname">Date<i style="color: red">*</i></label>
                                @Html.TextBoxFor(model => model.ClientLeads.Date, new { @placeholder = "Date", @class = "form-control", @value = System.DateTime.Now, @readonly = "Readonly" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.Date, null, new { style = "color:red", @id = "date" })
                                <label id = "errorname" class="error" style="display: none"></label>
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputname">Schedule Date<i style="color: red">*</i></label>
                                @Html.TextBoxFor(model => model.ClientLeads.ScheduleDate, new { @class = "form-control", @placeholder = "Schedule Date", @onkeypress = "return false", @autocomplete = "off", @id = "ClientLeads_ScheduleDate" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.ScheduleDate, null, new { style = "color:red", @id = "scheduledate" })
                                @*<label id="errorname" class="error" style="display: none"></label>*@
                            </div>
                            <div class="form-group row">
                                <label for="exampleInputname">Remark<i style="color: red">*</i></label>
                                @Html.TextBoxFor(model => model.ClientLeads.Remark, new { @placeholder = "Remark", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientLeads.Remark, null, new { style = "color:red", @id = "remark" })
                                <label id="errorname" class="error" style="display: none"></label>
                            </div>
                        </div>
                    </div>
                </div>

                @*<div class="row">
                        <div class="col-md-offset-5 col-lg-offset-5">
                            <button type="button" class="btn btn-success" id="Submit">Update</button>
                        </div>
                    </div>*@
                <div class="container">

                    <div class="row">
                        <div class="col-sm-6">
                            <button type="button" class="btn btn-success"  onclick="UpdateClientLead()">Update</button>
                        </div>
                        <div class="col-sm-6">
                            <button type="button" class="btn btn-success" id="Submit" onclick="location.href='@Url.Action("AcceptClientLead","ClientLead",new {@id=Model.ClientLeads.ClientLeadId})'">Accept</button>

                           
                        </div>
                    </div>
              </div>
            </div>
    }

</div>
